{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'localhost:8080/api/events';\n  }\n  getEvents(pagination = {\n    page: 0,\n    size: 10,\n    filter: {\n      name: ''\n    }\n  }) {\n    const params = new HttpParams().appendAll({\n      name: pagination.filter.name,\n      page: pagination.page,\n      size: pagination.size\n    });\n    return this.http.get(this.url, {\n      params\n    });\n  }\n  // updateEvent(event: Event): Observable<Event> {\n  //   return this.http.put<Event>(`${this.url}/${event.id}`, event);\n  // }\n  deleteEvent(eventId) {\n    return this.http.delete(`${this.url}/${eventId}`);\n  }\n  static #_ = this.ɵfac = function EventService_Factory(t) {\n    return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventService,\n    factory: EventService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","EventService","constructor","http","url","getEvents","pagination","page","size","filter","name","params","appendAll","get","deleteEvent","eventId","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\marek\\Desktop\\Git\\event-FE\\src\\app\\common\\service\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Pagination} from \"../model/pagination.model\";\nimport {EventResponse} from \"../model/event.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private url = 'localhost:8080/api/events'\n\n  constructor(private http: HttpClient) {}\n  \n  getEvents(pagination: Pagination = {page: 0, size: 10, filter: {name: ''}}): Observable<EventResponse>{\n    const params = new HttpParams().appendAll({\n      name: pagination.filter.name,\n      page: pagination.page,\n      size: pagination.size\n    })\n\n    return this.http.get<EventResponse>(this.url, {params});\n  }\n\n  // updateEvent(event: Event): Observable<Event> {\n  //   return this.http.put<Event>(`${this.url}/${event.id}`, event);\n  // }\n\n  deleteEvent(eventId: number): Observable<void> {\n    return this.http.delete<void>(`${this.url}/${eventId}`);\n  }\n  \n}\n"],"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;;;AAQ3D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAG,2BAA2B;EAEF;EAEvCC,SAASA,CAACC,UAAA,GAAyB;IAACC,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;MAACC,IAAI,EAAE;IAAE;EAAC,CAAC;IACxE,MAAMC,MAAM,GAAG,IAAIX,UAAU,EAAE,CAACY,SAAS,CAAC;MACxCF,IAAI,EAAEJ,UAAU,CAACG,MAAM,CAACC,IAAI;MAC5BH,IAAI,EAAED,UAAU,CAACC,IAAI;MACrBC,IAAI,EAAEF,UAAU,CAACE;KAClB,CAAC;IAEF,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAgB,IAAI,CAACT,GAAG,EAAE;MAACO;IAAM,CAAC,CAAC;EACzD;EAEA;EACA;EACA;EAEAG,WAAWA,CAACC,OAAe;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,GAAG,IAAIW,OAAO,EAAE,CAAC;EACzD;EAAC,QAAAE,CAAA,G;qBArBUhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}