(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('angular-toastify', ['exports', '@angular/core', 'rxjs', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['angular-toastify'] = {}, global.ng.core, global.rxjs, global.ng.common));
}(this, (function (exports, i0, rxjs, i1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var toastIdentitySequence = 0;
    var Toast = /** @class */ (function () {
        function Toast(message, type) {
            this.message = message;
            this.type = type;
            this.time = new Date().getTime();
            this.id = toastIdentitySequence++;
            this.$resetToast = new rxjs.Subject();
        }
        return Toast;
    }());

    var ToastType;
    (function (ToastType) {
        ToastType[ToastType["info"] = 0] = "info";
        ToastType[ToastType["success"] = 1] = "success";
        ToastType[ToastType["warning"] = 2] = "warning";
        ToastType[ToastType["error"] = 3] = "error";
        ToastType[ToastType["default"] = 4] = "default";
    })(ToastType || (ToastType = {}));

    var ToastService = /** @class */ (function () {
        function ToastService() {
            this.toastAddedEvent = new i0.EventEmitter();
            this.dismissAllEvent = new i0.EventEmitter();
        }
        ToastService.prototype.dismissAll = function () {
            this.dismissAllEvent.emit();
        };
        ToastService.prototype.info = function (message) {
            var toast = new Toast(message, ToastType.info);
            this.toastAddedEvent.emit(toast);
        };
        ToastService.prototype.success = function (message) {
            var toast = new Toast(message, ToastType.success);
            this.toastAddedEvent.emit(toast);
        };
        ToastService.prototype.warn = function (message) {
            var toast = new Toast(message, ToastType.warning);
            this.toastAddedEvent.emit(toast);
        };
        ToastService.prototype.error = function (message) {
            var toast = new Toast(message, ToastType.error);
            this.toastAddedEvent.emit(toast);
        };
        ToastService.prototype.default = function (message) {
            var toast = new Toast(message, ToastType.default);
            this.toastAddedEvent.emit(toast);
        };
        return ToastService;
    }());
    /** @nocollapse */ ToastService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ToastService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ ToastService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ToastService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ToastService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root'
                    }]
            }], ctorParameters: function () { return []; } });

    var ToastifyToastComponent = /** @class */ (function () {
        function ToastifyToastComponent(_cd, _zone) {
            this._cd = _cd;
            this._zone = _zone;
            this.autoClose = 5000;
            this.hideProgressBar = false;
            this.pauseOnHover = true;
            this.pauseOnVisibilityChange = true;
            this.closeOnClick = true;
            this.dismissEvent = new i0.EventEmitter();
            this.ToastType = ToastType;
            this.running = false;
        }
        ToastifyToastComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.autoCloseRemaining = this.autoClose;
            this.startTime = this.toast.time;
            this.toast.$resetToast.subscribe(function () { return _this.resetToastTimer(); });
            // Do not start timer when toast is prompted while window is out of focus
            if (this.handleVisibilityChange && document.visibilityState === "visible") {
                this.startCloseTimer();
            }
            // Start progress bar animation
            this.triggerProgressBarAnimation();
        };
        ToastifyToastComponent.prototype.triggerProgressBarAnimation = function () {
            var _this = this;
            // Cancel previous animlation to avoid leaks
            if (this._progressBarAnimation !== undefined) {
                cancelAnimationFrame(this._progressBarAnimation);
            }
            // Start animation
            var frame = function () {
                if (_this.running) {
                    var remainingTime = Math.max(0, _this.expectedAutoDismissTime - new Date().getTime());
                    var percentage = 100 - ((remainingTime / _this.autoClose) * 100);
                    _this.progressBarCover.nativeElement.style.width = percentage + "%";
                    if (percentage <= 0)
                        return;
                }
                _this._progressBarAnimation = requestAnimationFrame(frame);
            };
            this._progressBarAnimation = requestAnimationFrame(frame);
        };
        ToastifyToastComponent.prototype.ngOnDestroy = function () {
            var _a, _b;
            // Cancel animation
            if (this._progressBarAnimation) {
                cancelAnimationFrame(this._progressBarAnimation);
                this._progressBarAnimation = undefined;
            }
            // Clear auto close timeout
            this.clearTimerTimeout();
            // Complete all observables
            (_a = this.toast.$resetToast) === null || _a === void 0 ? void 0 : _a.complete();
            this.toast.$resetToast = null;
            (_b = this._$updateTimer) === null || _b === void 0 ? void 0 : _b.complete();
            this._$updateTimer = null;
        };
        ToastifyToastComponent.prototype.startCloseTimer = function () {
            var _this = this;
            if (this.running || !this.autoClose) {
                return;
            }
            this.running = true;
            this.expectedAutoDismissTime =
                new Date().getTime() + this.autoCloseRemaining;
            this.autoDismissTimeout = this._zone.runOutsideAngular(function () { return setTimeout(function () {
                _this._zone.run(function () {
                    _this.dismissEvent.emit();
                    _this._cd.markForCheck();
                });
            }, _this.autoCloseRemaining); });
        };
        ToastifyToastComponent.prototype.pauseCloseTimer = function () {
            this.running = false;
            this.clearTimerTimeout();
            // Calculate the elapsed time, subtract remaining time
            this.pauseTime = new Date().getTime();
            var elapsed = this.pauseTime - this.startTime;
            this.autoCloseRemaining = this.autoClose - elapsed;
        };
        ToastifyToastComponent.prototype.resetToastTimer = function () {
            this.clearTimerTimeout();
            this.running = false;
            this.startTime = new Date().getTime();
            this.autoCloseRemaining = this.autoClose;
            this.startCloseTimer();
        };
        ToastifyToastComponent.prototype.clearTimerTimeout = function () {
            if (this.autoDismissTimeout !== undefined) {
                this.expectedAutoDismissTime = undefined;
                clearTimeout(this.autoDismissTimeout);
            }
        };
        ToastifyToastComponent.prototype.handleDismissButtonAction = function () {
            if (this.closeOnClick) {
                return; // Let the other event handle the dismissal
            }
            this.clearTimerTimeout();
            this.dismissEvent.emit();
        };
        ToastifyToastComponent.prototype.handleHostClick = function () {
            if (this.closeOnClick) {
                this.clearTimerTimeout();
                this.dismissEvent.emit();
            }
        };
        ToastifyToastComponent.prototype.handleMouseEnter = function () {
            if (this.pauseOnHover) {
                this.pauseCloseTimer();
            }
        };
        ToastifyToastComponent.prototype.handleMouseLeave = function () {
            if (this.pauseOnHover) {
                this.startCloseTimer();
                this.startTime = new Date().getTime() + (this.startTime - this.pauseTime);
            }
        };
        ToastifyToastComponent.prototype.handleVisibilityChange = function () {
            if (!this.pauseOnVisibilityChange) {
                return;
            }
            if (document.visibilityState !== "visible") {
                this.pauseCloseTimer();
                this._cd.detectChanges();
            }
            else {
                this.startCloseTimer();
            }
        };
        return ToastifyToastComponent;
    }());
    /** @nocollapse */ ToastifyToastComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ToastifyToastComponent, deps: [{ token: i0__namespace.ChangeDetectorRef }, { token: i0__namespace.NgZone }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ ToastifyToastComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ToastifyToastComponent, selector: "lib-toastify-toast", inputs: { autoClose: "autoClose", hideProgressBar: "hideProgressBar", pauseOnHover: "pauseOnHover", pauseOnVisibilityChange: "pauseOnVisibilityChange", closeOnClick: "closeOnClick", toast: "toast", iconLibrary: "iconLibrary" }, outputs: { dismissEvent: "dismissEvent" }, host: { listeners: { "click": "handleHostClick()", "mouseenter": "handleMouseEnter()", "mouseleave": "handleMouseLeave()", "document:visibilitychange": "handleVisibilityChange()" } }, viewQueries: [{ propertyName: "progressBar", first: true, predicate: ["progressBar"], descendants: true }, { propertyName: "progressBarCover", first: true, predicate: ["progressBarCover"], descendants: true }], ngImport: i0__namespace, template: "<div role=\"alert\" class=\"toast-body\">\n    <div class=\"icon-container\">\n        <span *ngIf=\"iconLibrary == 'material'\" [ngSwitch]=\"toast.type\">\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.info\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.default\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.warning\">warning_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.error\">error_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.success\">done</i>\n        </span>\n        <span *ngIf=\"iconLibrary == 'font-awesome'\" [ngSwitch]=\"toast.type\">\n            <i *ngSwitchCase=\"ToastType.info\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.default\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.warning\" class=\"fa fa-exclamation-triangle\"></i>\n            <i *ngSwitchCase=\"ToastType.error\" class=\"fa fa-exclamation\"></i>\n            <i *ngSwitchCase=\"ToastType.success\" class=\"fa fa-check\"></i>\n        </span>\n    </div>\n    <div class=\"toast-container\">\n        <span>{{toast.message}}</span>\n    </div>\n</div>\n<button (click)=\"handleDismissButtonAction()\" class=\"close-button close-button--{{ToastType[toast.type]}}\" type=\"button\" aria-label=\"close\">\u2716</button>\n\n<div #progressBar *ngIf=\"!hideProgressBar\" class=\"progress-bar progress-bar&#45;&#45;{{ToastType[toast.type]}}\" style=\"opacity: 1;\"></div>\n<div #progressBarCover *ngIf=\"!hideProgressBar\" class=\"progress-bar-cover toast--{{ToastType[toast.type]}}\" [style.animation-duration]=\"this.autoClose + 'ms'\"  [style.animation-play-state]=\"running? 'running' : 'paused'\"></div>\n", styles: [".toast{position:relative;min-height:64px;box-sizing:border-box;margin-bottom:1rem;padding:8px;border-radius:1px;box-shadow:0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05);display:flex;justify-content:space-between;max-height:800px;overflow:hidden;font-family:sans-serif;cursor:pointer;direction:ltr}.toast--rtl{direction:rtl}.toast--default{background:#fff;color:#aaa}.toast--info{background:#3498db}.toast--success{background:#07bc0c}.toast--warning{background:#f1c40f}.toast--error{background:#e74c3c}.toast-body{margin:auto 0;flex:1}@media only screen and (max-width:480px){.toast{margin-bottom:0}}.close-button{color:#fff;font-weight:700;font-size:14px;background:transparent;outline:none;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s ease;align-self:flex-start}.close-button--default{color:#000;opacity:.3}.close-button:focus,.close-button:hover{opacity:1}.progress-bar-cover{right:0;z-index:100;direction:rtl}.progress-bar,.progress-bar-cover{position:absolute;bottom:0;width:100%;height:5px;transform-origin:left}.progress-bar{left:0;z-index:99;opacity:.7;background-color:hsla(0,0%,100%,.7)}.progress-bar--controlled{transition:transform .2s}.progress-bar--rtl{right:0;left:auto;transform-origin:right}.progress-bar--default{background:linear-gradient(90deg,#4cd964,#5ac8fa,#007aff,#34aadc,#5856d6,#ff2d55)}.icon-container,.toast-body{vertical-align:middle}.icon-container{display:inline-block;width:25px}.icon-container span{margin-right:.5rem;display:inline-block;text-align:center;width:20px}.icon-container span i{vertical-align:middle}.fa,.material-icons{font-size:18px}.toast-container{display:inline-block;width:calc(100% - 25px);vertical-align:middle}"], directives: [{ type: i1__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i1__namespace.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ToastifyToastComponent, decorators: [{
                type: i0.Component,
                args: [{
                        // tslint:disable-next-line:component-selector
                        selector: "lib-toastify-toast",
                        templateUrl: "./toastify-toast.component.html",
                        styleUrls: ["./toastify-toast.component.scss"],
                        // changeDetection: ChangeDetectionStrategy.OnPush
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ChangeDetectorRef }, { type: i0__namespace.NgZone }]; }, propDecorators: { progressBar: [{
                    type: i0.ViewChild,
                    args: ["progressBar"]
                }], progressBarCover: [{
                    type: i0.ViewChild,
                    args: ["progressBarCover"]
                }], autoClose: [{
                    type: i0.Input
                }], hideProgressBar: [{
                    type: i0.Input
                }], pauseOnHover: [{
                    type: i0.Input
                }], pauseOnVisibilityChange: [{
                    type: i0.Input
                }], closeOnClick: [{
                    type: i0.Input
                }], toast: [{
                    type: i0.Input
                }], iconLibrary: [{
                    type: i0.Input
                }], dismissEvent: [{
                    type: i0.Output
                }], handleHostClick: [{
                    type: i0.HostListener,
                    args: ["click"]
                }], handleMouseEnter: [{
                    type: i0.HostListener,
                    args: ["mouseenter"]
                }], handleMouseLeave: [{
                    type: i0.HostListener,
                    args: ["mouseleave"]
                }], handleVisibilityChange: [{
                    type: i0.HostListener,
                    args: ["document:visibilitychange"]
                }] } });

    var ToastifyToastContainerComponent = /** @class */ (function () {
        function ToastifyToastContainerComponent(_toastService, _cd) {
            this._toastService = _toastService;
            this._cd = _cd;
            this.transitionDurations = 400;
            this.position = 'top-right';
            this.transition = 'bounce';
            this.autoClose = 5000;
            this.hideProgressBar = false;
            this.pauseOnHover = true;
            this.pauseOnVisibilityChange = true;
            this.closeOnClick = true;
            this.newestOnTop = false;
            this.preventDuplicates = false;
            this.iconLibrary = 'none';
            this.ToastType = ToastType;
            this.toasts = new Array();
            this.toastTransitionDict = {};
        }
        ToastifyToastContainerComponent.prototype.ngOnChanges = function () {
            this._cd.markForCheck();
        };
        ToastifyToastContainerComponent.prototype.dismiss = function (toast) {
            var _this = this;
            this.toastTransitionDict[toast.id] = TransitionState.exiting;
            setTimeout(function () {
                var index = _this.toasts.indexOf(toast);
                _this.toasts.splice(index, 1);
                _this._cd.markForCheck();
            }, this.transitionDurations);
        };
        ToastifyToastContainerComponent.prototype.getClass = function (toast) {
            var base = "toast toast--" + ToastType[toast.type] + " ";
            var state = this.toastTransitionDict[toast.id];
            if (state === TransitionState.entering) {
                base += this.transition + "-enter " + this.transition + "-enter--" + this.position;
            }
            else if (state === TransitionState.exiting) {
                base += this.transition + "-exit " + this.transition + "-exit--" + this.position;
            }
            return base;
        };
        ToastifyToastContainerComponent.prototype.ngOnInit = function () {
            var _this = this;
            this._toastService.dismissAllEvent.subscribe(function () {
                _this.toasts = new Array();
                _this._cd.markForCheck();
            });
            this._toastService.toastAddedEvent.subscribe(function (toast) { return _this.handleToastAddedEvent(toast); });
        };
        ToastifyToastContainerComponent.prototype.handleToastAddedEvent = function (toast) {
            var _this = this;
            // If "preventDuplicates" is enabled, toast is not added if one toast with same message exists
            // The only thing to do is to update the toast time to keep it visible
            if (this.preventDuplicates === true) {
                var sameToast = this.toasts.find(function (existingToast) { return existingToast.message === toast.message; });
                if (sameToast) {
                    sameToast.$resetToast.next();
                    this._cd.markForCheck();
                    return;
                }
            }
            // Add new toast transition
            this.toastTransitionDict[toast.id] = TransitionState.entering;
            setTimeout(function () {
                _this.toastTransitionDict[toast.id] = TransitionState.noTransition;
                _this._cd.markForCheck();
            }, this.transitionDurations);
            // Add new toast
            if (this.newestOnTop) {
                this.toasts.unshift(toast);
            }
            else {
                this.toasts.push(toast);
            }
            this._cd.markForCheck();
        };
        return ToastifyToastContainerComponent;
    }());
    /** @nocollapse */ ToastifyToastContainerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ToastifyToastContainerComponent, deps: [{ token: ToastService }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ ToastifyToastContainerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ToastifyToastContainerComponent, selector: "lib-toastify-toast-container", inputs: { position: "position", transition: "transition", autoClose: "autoClose", hideProgressBar: "hideProgressBar", pauseOnHover: "pauseOnHover", pauseOnVisibilityChange: "pauseOnVisibilityChange", closeOnClick: "closeOnClick", newestOnTop: "newestOnTop", preventDuplicates: "preventDuplicates", iconLibrary: "iconLibrary" }, usesOnChanges: true, ngImport: i0__namespace, template: "<div class=\"toast-container toast-container--{{position}}\">\n    <lib-toastify-toast *ngFor=\"let toast of toasts\" [class]=\"getClass(toast)\" style=\"animation-fill-mode: both; animation-duration: 0.75s\"\n        [autoClose]=\"autoClose\" [toast]=\"toast\" (dismissEvent)=\"dismiss(toast)\" [hideProgressBar]=\"hideProgressBar\" [pauseOnHover]=\"pauseOnHover\"\n        [pauseOnVisibilityChange]=\"pauseOnVisibilityChange\" [closeOnClick]=\"closeOnClick\" [iconLibrary]=\"iconLibrary\">\n    </lib-toastify-toast>\n</div>", styles: [".toast-container{z-index:9999;-webkit-transform:translateZ(9999px);position:fixed;padding:4px;width:320px;box-sizing:border-box;color:#fff}.toast-container--top-left{top:1em;left:1em}.toast-container--top-center{top:1em;left:50%;margin-left:-160px}.toast-container--top-right{top:1em;right:1em}.toast-container--bottom-left{bottom:1em;left:1em}.toast-container--bottom-center{bottom:1em;left:50%;margin-left:-160px}.toast-container--bottom-right{bottom:1em;right:1em}@media only screen and (max-width:480px){.toast-container{width:100vw;padding:0;left:0;margin:0}.toast-container--top-center,.toast-container--top-left,.toast-container--top-right{top:0}.toast-container--bottom-center,.toast-container--bottom-left,.toast-container--bottom-right{bottom:0}.toast-container--rtl{right:0;left:auto}}.toast{position:relative;min-height:64px;box-sizing:border-box;margin-bottom:1rem;padding:8px;border-radius:1px;box-shadow:0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05);display:flex;justify-content:space-between;max-height:800px;overflow:hidden;font-family:sans-serif;cursor:pointer;direction:ltr}.toast--rtl{direction:rtl}.toast--default{background:#fff;color:#aaa}.toast--info{background:#3498db}.toast--success{background:#07bc0c}.toast--warning{background:#f1c40f}.toast--error{background:#e74c3c}.toast-body{margin:auto 0;flex:1}@media only screen and (max-width:480px){.toast{margin-bottom:0}}@keyframes bounceInRight{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes bounceOutRight{20%{opacity:1;transform:translate3d(-20px,0,0)}to{opacity:0;transform:translate3d(2000px,0,0)}}@keyframes bounceInLeft{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:none}}@keyframes bounceOutLeft{20%{opacity:1;transform:translate3d(20px,0,0)}to{opacity:0;transform:translate3d(-2000px,0,0)}}@keyframes bounceInUp{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translateZ(0)}}@keyframes bounceOutUp{20%{transform:translate3d(0,-10px,0)}40%,45%{opacity:1;transform:translate3d(0,20px,0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}@keyframes bounceInDown{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:none}}@keyframes bounceOutDown{20%{transform:translate3d(0,10px,0)}40%,45%{opacity:1;transform:translate3d(0,-20px,0)}to{opacity:0;transform:translate3d(0,2000px,0)}}.bounce-enter--bottom-left,.bounce-enter--top-left{animation-name:bounceInLeft}.bounce-enter--bottom-right,.bounce-enter--top-right{animation-name:bounceInRight}.bounce-enter--top-center{animation-name:bounceInDown}.bounce-enter--bottom-center{animation-name:bounceInUp}.bounce-exit--bottom-left,.bounce-exit--top-left{animation-name:bounceOutLeft}.bounce-exit--bottom-right,.bounce-exit--top-right{animation-name:bounceOutRight}.bounce-exit--top-center{animation-name:bounceOutUp}.bounce-exit--bottom-center{animation-name:bounceOutDown}@keyframes zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes zoomOut{0%{opacity:1}50%{opacity:0;transform:scale3d(.3,.3,.3)}to{opacity:0}}.zoom-enter{animation-name:zoomIn}.zoom-exit{animation-name:zoomOut}@keyframes flipIn{0%{transform:perspective(400px) rotateX(90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotateX(-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotateX(10deg);opacity:1}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}@keyframes flipOut{0%{transform:perspective(400px)}30%{transform:perspective(400px) rotateX(-20deg);opacity:1}to{transform:perspective(400px) rotateX(90deg);opacity:0}}.flip-enter{animation-name:flipIn}.flip-exit{animation-name:flipOut}@keyframes slideInRight{0%{transform:translate3d(110%,0,0);visibility:visible}to{transform:translateZ(0)}}@keyframes slideInLeft{0%{transform:translate3d(-110%,0,0);visibility:visible}to{transform:translateZ(0)}}@keyframes slideInUp{0%{transform:translate3d(0,110%,0);visibility:visible}to{transform:translateZ(0)}}@keyframes slideInDown{0%{transform:translate3d(0,-110%,0);visibility:visible}to{transform:translateZ(0)}}@keyframes slideOutRight{0%{transform:translateZ(0)}to{visibility:hidden;transform:translate3d(110%,0,0)}}@keyframes slideOutLeft{0%{transform:translateZ(0)}to{visibility:hidden;transform:translate3d(-110%,0,0)}}@keyframes slideOutDown{0%{transform:translateZ(0)}to{visibility:hidden;transform:translate3d(0,500px,0)}}@keyframes slideOutUp{0%{transform:translateZ(0)}to{visibility:hidden;transform:translate3d(0,-500px,0)}}.slide-enter--bottom-left,.slide-enter--top-left{animation-name:slideInLeft}.slide-enter--bottom-right,.slide-enter--top-right{animation-name:slideInRight}.slide-enter--top-center{animation-name:slideInDown}.slide-enter--bottom-center{animation-name:slideInUp}.slide-exit--bottom-left,.slide-exit--top-left{animation-name:slideOutLeft}.slide-exit--bottom-right,.slide-exit--top-right{animation-name:slideOutRight}.slide-exit--top-center{animation-name:slideOutUp}.slide-exit--bottom-center{animation-name:slideOutDown}"], components: [{ type: ToastifyToastComponent, selector: "lib-toastify-toast", inputs: ["autoClose", "hideProgressBar", "pauseOnHover", "pauseOnVisibilityChange", "closeOnClick", "toast", "iconLibrary"], outputs: ["dismissEvent"] }], directives: [{ type: i1__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ToastifyToastContainerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'lib-toastify-toast-container',
                        templateUrl: './toastify-toast-container.component.html',
                        styleUrls: ['./toastify-toast-container.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: ToastService }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { position: [{
                    type: i0.Input
                }], transition: [{
                    type: i0.Input
                }], autoClose: [{
                    type: i0.Input
                }], hideProgressBar: [{
                    type: i0.Input
                }], pauseOnHover: [{
                    type: i0.Input
                }], pauseOnVisibilityChange: [{
                    type: i0.Input
                }], closeOnClick: [{
                    type: i0.Input
                }], newestOnTop: [{
                    type: i0.Input
                }], preventDuplicates: [{
                    type: i0.Input
                }], iconLibrary: [{
                    type: i0.Input
                }] } });
    var TransitionState;
    (function (TransitionState) {
        TransitionState[TransitionState["entering"] = 0] = "entering";
        TransitionState[TransitionState["noTransition"] = 1] = "noTransition";
        TransitionState[TransitionState["exiting"] = 2] = "exiting";
    })(TransitionState || (TransitionState = {}));

    var AngularToastifyModule = /** @class */ (function () {
        function AngularToastifyModule() {
        }
        return AngularToastifyModule;
    }());
    /** @nocollapse */ AngularToastifyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AngularToastifyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ AngularToastifyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AngularToastifyModule, declarations: [ToastifyToastComponent, ToastifyToastContainerComponent], imports: [i1.CommonModule], exports: [ToastifyToastContainerComponent] });
    /** @nocollapse */ AngularToastifyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AngularToastifyModule, imports: [[i1.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AngularToastifyModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [ToastifyToastComponent, ToastifyToastContainerComponent],
                        imports: [i1.CommonModule],
                        exports: [ToastifyToastContainerComponent]
                    }]
            }] });

    /*
     * Public API Surface of angular-toastify
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AngularToastifyModule = AngularToastifyModule;
    exports.ToastService = ToastService;
    exports.ToastifyToastContainerComponent = ToastifyToastContainerComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-toastify.umd.js.map
