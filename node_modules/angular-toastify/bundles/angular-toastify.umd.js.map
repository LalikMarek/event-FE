{"version":3,"file":"angular-toastify.umd.js","sources":["../../../projects/angular-toastify/src/lib/toast.ts","../../../projects/angular-toastify/src/lib/toast-type.ts","../../../projects/angular-toastify/src/lib/toast.service.ts","../../../projects/angular-toastify/src/lib/toastify-toast/toastify-toast.component.ts","../../../projects/angular-toastify/src/lib/toastify-toast/toastify-toast.component.html","../../../projects/angular-toastify/src/lib/toastify-toast-container/toastify-toast-container.component.ts","../../../projects/angular-toastify/src/lib/toastify-toast-container/toastify-toast-container.component.html","../../../projects/angular-toastify/src/lib/angular-toastify.module.ts","../../../projects/angular-toastify/src/public-api.ts","../../../projects/angular-toastify/src/angular-toastify.ts"],"sourcesContent":["import { ToastType } from './toast-type';\nimport { Observable, Subject } from 'rxjs';\n\nlet toastIdentitySequence = 0;\n\nexport class Toast {\n    id: number;\n    message: string;\n    type: ToastType;\n    readonly time: number;\n\n    $resetToast: Subject<any>;\n\n    constructor(message: string, type: ToastType) {\n        this.message = message;\n        this.type = type;\n        this.time = new Date().getTime();\n        this.id = toastIdentitySequence++;\n\n        this.$resetToast = new Subject();\n    }\n}\n","export enum ToastType {\n    info,\n    success,\n    warning,\n    error,\n    default\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Toast } from './toast';\nimport { ToastType } from './toast-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  toastAddedEvent = new EventEmitter();\n  constructor() { }\n\n  dismissAllEvent = new EventEmitter();\n\n  dismissAll() {\n    this.dismissAllEvent.emit();\n  }\n\n  info(message: string) {\n    const toast = new Toast(message, ToastType.info);\n    this.toastAddedEvent.emit(toast);\n  }\n\n  success(message: string) {\n    const toast = new Toast(message, ToastType.success);\n    this.toastAddedEvent.emit(toast);\n  }\n\n  warn(message: string) {\n    const toast = new Toast(message, ToastType.warning);\n    this.toastAddedEvent.emit(toast);\n  }\n\n  error(message: string) {\n    const toast = new Toast(message, ToastType.error);\n    this.toastAddedEvent.emit(toast);\n  }\n\n  default(message: string) {\n    const toast = new Toast(message, ToastType.default);\n    this.toastAddedEvent.emit(toast);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { ToastType } from \"../toast-type\";\nimport { Toast } from \"../toast\";\nimport { interval } from \"rxjs\";\nimport { throttle, throttleTime } from \"rxjs/operators\";\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: \"lib-toastify-toast\",\n  templateUrl: \"./toastify-toast.component.html\",\n  styleUrls: [\"./toastify-toast.component.scss\"],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToastifyToastComponent implements OnInit, OnDestroy {\n  @ViewChild(\"progressBar\") progressBar: ElementRef<HTMLElement>;\n  @ViewChild(\"progressBarCover\") progressBarCover: ElementRef<HTMLElement>;\n\n  @Input() autoClose = 5000;\n  @Input() hideProgressBar = false;\n  @Input() pauseOnHover = true;\n  @Input() pauseOnVisibilityChange = true;\n  @Input() closeOnClick = true;\n  @Input() toast: Toast;\n  @Input() iconLibrary: \"material\" | \"font-awesome\" | \"none\";\n\n  @Output() dismissEvent = new EventEmitter();\n\n  private expectedAutoDismissTime: number;\n  private autoDismissTimeout: any;\n  private autoCloseRemaining: number;\n\n  private pauseTime: number;\n  private startTime: number;\n\n  private _progressBarAnimation: number;\n  private _$updateTimer;\n\n  ToastType = ToastType;\n  running = false;\n\n  constructor(private _cd: ChangeDetectorRef, private _zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.autoCloseRemaining = this.autoClose;\n    this.startTime = this.toast.time;\n    this.toast.$resetToast.subscribe(() => this.resetToastTimer());\n    // Do not start timer when toast is prompted while window is out of focus\n    if (this.handleVisibilityChange && document.visibilityState === \"visible\") {\n      this.startCloseTimer();\n    }\n\n    // Start progress bar animation\n    this.triggerProgressBarAnimation();\n  }\n\n  private triggerProgressBarAnimation(): void {\n    // Cancel previous animlation to avoid leaks\n    if (this._progressBarAnimation !== undefined) {\n      cancelAnimationFrame(this._progressBarAnimation);\n    }\n\n    // Start animation\n    const frame = () => {\n      if (this.running) {\n        const remainingTime = Math.max(0, this.expectedAutoDismissTime - new Date().getTime());\n        const percentage = 100 - ((remainingTime / this.autoClose) * 100);\n        this.progressBarCover.nativeElement.style.width = percentage + \"%\";\n        if (percentage <= 0) return;\n      }\n      this._progressBarAnimation = requestAnimationFrame(frame);\n    };\n    this._progressBarAnimation = requestAnimationFrame(frame);\n  }\n\n  ngOnDestroy(): void {\n    // Cancel animation\n    if (this._progressBarAnimation) {\n      cancelAnimationFrame(this._progressBarAnimation);\n      this._progressBarAnimation = undefined;\n    }\n    // Clear auto close timeout\n    this.clearTimerTimeout();\n    // Complete all observables\n    this.toast.$resetToast?.complete();\n    this.toast.$resetToast = null;\n    this._$updateTimer?.complete();\n    this._$updateTimer = null;\n  }\n\n  startCloseTimer(): void {\n    if (this.running || !this.autoClose) {\n      return;\n    }\n\n    this.running = true;\n    this.expectedAutoDismissTime =\n      new Date().getTime() + this.autoCloseRemaining;\n    this.autoDismissTimeout = this._zone.runOutsideAngular(() =>\n      setTimeout(() => {\n        this._zone.run(() => {\n          this.dismissEvent.emit();\n          this._cd.markForCheck();\n        });\n      }, this.autoCloseRemaining)\n    );\n  }\n\n  pauseCloseTimer(): void {\n    this.running = false;\n    this.clearTimerTimeout();\n\n    // Calculate the elapsed time, subtract remaining time\n    this.pauseTime = new Date().getTime();\n    const elapsed = this.pauseTime - this.startTime;\n    this.autoCloseRemaining = this.autoClose - elapsed;\n  }\n\n  resetToastTimer() {\n    this.clearTimerTimeout();\n    this.running = false;\n    this.startTime = new Date().getTime();\n    this.autoCloseRemaining = this.autoClose;\n    this.startCloseTimer();\n  }\n\n  clearTimerTimeout(): void {\n    if (this.autoDismissTimeout !== undefined) {\n      this.expectedAutoDismissTime = undefined;\n      clearTimeout(this.autoDismissTimeout);\n    }\n  }\n\n  handleDismissButtonAction(): void {\n    if (this.closeOnClick) {\n      return; // Let the other event handle the dismissal\n    }\n\n    this.clearTimerTimeout();\n    this.dismissEvent.emit();\n  }\n\n  @HostListener(\"click\")\n  handleHostClick(): void {\n    if (this.closeOnClick) {\n      this.clearTimerTimeout();\n      this.dismissEvent.emit();\n    }\n  }\n\n  @HostListener(\"mouseenter\")\n  handleMouseEnter(): void {\n    if (this.pauseOnHover) {\n      this.pauseCloseTimer();\n    }\n  }\n\n  @HostListener(\"mouseleave\")\n  handleMouseLeave(): void {\n    if (this.pauseOnHover) {\n      this.startCloseTimer();\n      this.startTime = new Date().getTime() + (this.startTime - this.pauseTime);\n    }\n  }\n\n  @HostListener(\"document:visibilitychange\")\n  handleVisibilityChange(): void {\n    if (!this.pauseOnVisibilityChange) {\n      return;\n    }\n\n    if (document.visibilityState !== \"visible\") {\n      this.pauseCloseTimer();\n      this._cd.detectChanges();\n    } else {\n      this.startCloseTimer();\n    }\n  }\n}\n","<div role=\"alert\" class=\"toast-body\">\n    <div class=\"icon-container\">\n        <span *ngIf=\"iconLibrary == 'material'\" [ngSwitch]=\"toast.type\">\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.info\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.default\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.warning\">warning_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.error\">error_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.success\">done</i>\n        </span>\n        <span *ngIf=\"iconLibrary == 'font-awesome'\" [ngSwitch]=\"toast.type\">\n            <i *ngSwitchCase=\"ToastType.info\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.default\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.warning\" class=\"fa fa-exclamation-triangle\"></i>\n            <i *ngSwitchCase=\"ToastType.error\" class=\"fa fa-exclamation\"></i>\n            <i *ngSwitchCase=\"ToastType.success\" class=\"fa fa-check\"></i>\n        </span>\n    </div>\n    <div class=\"toast-container\">\n        <span>{{toast.message}}</span>\n    </div>\n</div>\n<button (click)=\"handleDismissButtonAction()\" class=\"close-button close-button--{{ToastType[toast.type]}}\" type=\"button\" aria-label=\"close\">âœ–</button>\n\n<div #progressBar *ngIf=\"!hideProgressBar\" class=\"progress-bar progress-bar&#45;&#45;{{ToastType[toast.type]}}\" style=\"opacity: 1;\"></div>\n<div #progressBarCover *ngIf=\"!hideProgressBar\" class=\"progress-bar-cover toast--{{ToastType[toast.type]}}\" [style.animation-duration]=\"this.autoClose + 'ms'\"  [style.animation-play-state]=\"running? 'running' : 'paused'\"></div>\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ToastService } from '../toast.service';\nimport { Toast } from '../toast';\nimport { ToastType } from '../toast-type';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'lib-toastify-toast-container',\n  templateUrl: './toastify-toast-container.component.html',\n  styleUrls: ['./toastify-toast-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToastifyToastContainerComponent implements OnInit, OnChanges {\n  private readonly transitionDurations = 400;\n\n  @Input() position: 'top-left' | 'top-right' | 'bottom-right' | 'bottom-left' = 'top-right';\n  @Input() transition: 'bounce' | 'slide' | 'zoom' | 'flip' = 'bounce';\n  @Input() autoClose = 5000;\n  @Input() hideProgressBar = false;\n  @Input() pauseOnHover = true;\n  @Input() pauseOnVisibilityChange = true;\n  @Input() closeOnClick = true;\n  @Input() newestOnTop = false;\n  @Input() preventDuplicates = false;\n  @Input() iconLibrary: 'material' | 'font-awesome' | 'none' = 'none';\n\n  ToastType = ToastType;\n  toasts = new Array<Toast>();\n  toastTransitionDict = {};\n\n  constructor(private _toastService: ToastService, private _cd: ChangeDetectorRef) { }\n\n  ngOnChanges(): void {\n    this._cd.markForCheck();\n  }\n\n  dismiss(toast: Toast): void {\n    this.toastTransitionDict[toast.id] = TransitionState.exiting;\n    setTimeout(() => {\n      const index = this.toasts.indexOf(toast);\n      this.toasts.splice(index, 1);\n      this._cd.markForCheck();\n    }, this.transitionDurations);\n  }\n\n  getClass(toast: Toast): string {\n    let base = `toast toast--${ToastType[toast.type]} `;\n    const state = this.toastTransitionDict[toast.id];\n    if (state === TransitionState.entering) {\n      base += `${this.transition}-enter ${this.transition}-enter--${this.position}`;\n    } else if (state === TransitionState.exiting) {\n      base += `${this.transition}-exit ${this.transition}-exit--${this.position}`;\n    }\n\n    return base;\n  }\n\n  ngOnInit(): void {\n    this._toastService.dismissAllEvent.subscribe(() => {\n      this.toasts = new Array<Toast>();\n      this._cd.markForCheck();\n    });\n\n    this._toastService.toastAddedEvent.subscribe((toast: Toast) => this.handleToastAddedEvent(toast));\n  }\n\n  handleToastAddedEvent(toast: Toast): void {\n    // If \"preventDuplicates\" is enabled, toast is not added if one toast with same message exists\n    // The only thing to do is to update the toast time to keep it visible\n    if(this.preventDuplicates === true) {\n      const sameToast: Toast = this.toasts.find((existingToast) => existingToast.message === toast.message);\n      if (sameToast) {\n        sameToast.$resetToast.next();\n        this._cd.markForCheck();\n        return;\n      }\n    }\n\n    // Add new toast transition\n    this.toastTransitionDict[toast.id] = TransitionState.entering;\n    setTimeout(() => {\n      this.toastTransitionDict[toast.id] = TransitionState.noTransition;\n      this._cd.markForCheck();\n    }, this.transitionDurations);\n\n    // Add new toast\n    if (this.newestOnTop) {\n      this.toasts.unshift(toast);\n    } else {\n      this.toasts.push(toast);\n    }\n    this._cd.markForCheck();\n  }\n}\n\nenum TransitionState {\n  entering,\n  noTransition,\n  exiting\n}\n","<div class=\"toast-container toast-container--{{position}}\">\n    <lib-toastify-toast *ngFor=\"let toast of toasts\" [class]=\"getClass(toast)\" style=\"animation-fill-mode: both; animation-duration: 0.75s\"\n        [autoClose]=\"autoClose\" [toast]=\"toast\" (dismissEvent)=\"dismiss(toast)\" [hideProgressBar]=\"hideProgressBar\" [pauseOnHover]=\"pauseOnHover\"\n        [pauseOnVisibilityChange]=\"pauseOnVisibilityChange\" [closeOnClick]=\"closeOnClick\" [iconLibrary]=\"iconLibrary\">\n    </lib-toastify-toast>\n</div>","import { NgModule } from '@angular/core';\nimport { ToastifyToastComponent } from './toastify-toast/toastify-toast.component';\nimport { ToastifyToastContainerComponent } from './toastify-toast-container/toastify-toast-container.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ToastifyToastComponent, ToastifyToastContainerComponent],\n  imports: [ CommonModule ],\n  exports: [ToastifyToastContainerComponent]\n})\nexport class AngularToastifyModule { }\n","/*\n * Public API Surface of angular-toastify\n */\n\nexport * from './lib/toast.service';\nexport * from './lib/toastify-toast-container/toastify-toast-container.component';\nexport * from './lib/angular-toastify.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Subject","EventEmitter","Injectable","Component","ViewChild","Input","Output","HostListener","ChangeDetectionStrategy","CommonModule","NgModule"],"mappings":"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"}