{"version":3,"file":"angular-toastify.js","sources":["../../../projects/angular-toastify/src/lib/toast.ts","../../../projects/angular-toastify/src/lib/toast-type.ts","../../../projects/angular-toastify/src/lib/toast.service.ts","../../../projects/angular-toastify/src/lib/toastify-toast/toastify-toast.component.ts","../../../projects/angular-toastify/src/lib/toastify-toast/toastify-toast.component.html","../../../projects/angular-toastify/src/lib/toastify-toast-container/toastify-toast-container.component.ts","../../../projects/angular-toastify/src/lib/toastify-toast-container/toastify-toast-container.component.html","../../../projects/angular-toastify/src/lib/angular-toastify.module.ts","../../../projects/angular-toastify/src/public-api.ts","../../../projects/angular-toastify/src/angular-toastify.ts"],"sourcesContent":["import { ToastType } from './toast-type';\nimport { Observable, Subject } from 'rxjs';\n\nlet toastIdentitySequence = 0;\n\nexport class Toast {\n    id: number;\n    message: string;\n    type: ToastType;\n    readonly time: number;\n\n    $resetToast: Subject<any>;\n\n    constructor(message: string, type: ToastType) {\n        this.message = message;\n        this.type = type;\n        this.time = new Date().getTime();\n        this.id = toastIdentitySequence++;\n\n        this.$resetToast = new Subject();\n    }\n}\n","export enum ToastType {\n    info,\n    success,\n    warning,\n    error,\n    default\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Toast } from './toast';\nimport { ToastType } from './toast-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  toastAddedEvent = new EventEmitter();\n  constructor() { }\n\n  dismissAllEvent = new EventEmitter();\n\n  dismissAll() {\n    this.dismissAllEvent.emit();\n  }\n\n  info(message: string) {\n    const toast = new Toast(message, ToastType.info);\n    this.toastAddedEvent.emit(toast);\n  }\n\n  success(message: string) {\n    const toast = new Toast(message, ToastType.success);\n    this.toastAddedEvent.emit(toast);\n  }\n\n  warn(message: string) {\n    const toast = new Toast(message, ToastType.warning);\n    this.toastAddedEvent.emit(toast);\n  }\n\n  error(message: string) {\n    const toast = new Toast(message, ToastType.error);\n    this.toastAddedEvent.emit(toast);\n  }\n\n  default(message: string) {\n    const toast = new Toast(message, ToastType.default);\n    this.toastAddedEvent.emit(toast);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { ToastType } from \"../toast-type\";\nimport { Toast } from \"../toast\";\nimport { interval } from \"rxjs\";\nimport { throttle, throttleTime } from \"rxjs/operators\";\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: \"lib-toastify-toast\",\n  templateUrl: \"./toastify-toast.component.html\",\n  styleUrls: [\"./toastify-toast.component.scss\"],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToastifyToastComponent implements OnInit, OnDestroy {\n  @ViewChild(\"progressBar\") progressBar: ElementRef<HTMLElement>;\n  @ViewChild(\"progressBarCover\") progressBarCover: ElementRef<HTMLElement>;\n\n  @Input() autoClose = 5000;\n  @Input() hideProgressBar = false;\n  @Input() pauseOnHover = true;\n  @Input() pauseOnVisibilityChange = true;\n  @Input() closeOnClick = true;\n  @Input() toast: Toast;\n  @Input() iconLibrary: \"material\" | \"font-awesome\" | \"none\";\n\n  @Output() dismissEvent = new EventEmitter();\n\n  private expectedAutoDismissTime: number;\n  private autoDismissTimeout: any;\n  private autoCloseRemaining: number;\n\n  private pauseTime: number;\n  private startTime: number;\n\n  private _progressBarAnimation: number;\n  private _$updateTimer;\n\n  ToastType = ToastType;\n  running = false;\n\n  constructor(private _cd: ChangeDetectorRef, private _zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.autoCloseRemaining = this.autoClose;\n    this.startTime = this.toast.time;\n    this.toast.$resetToast.subscribe(() => this.resetToastTimer());\n    // Do not start timer when toast is prompted while window is out of focus\n    if (this.handleVisibilityChange && document.visibilityState === \"visible\") {\n      this.startCloseTimer();\n    }\n\n    // Start progress bar animation\n    this.triggerProgressBarAnimation();\n  }\n\n  private triggerProgressBarAnimation(): void {\n    // Cancel previous animlation to avoid leaks\n    if (this._progressBarAnimation !== undefined) {\n      cancelAnimationFrame(this._progressBarAnimation);\n    }\n\n    // Start animation\n    const frame = () => {\n      if (this.running) {\n        const remainingTime = Math.max(0, this.expectedAutoDismissTime - new Date().getTime());\n        const percentage = 100 - ((remainingTime / this.autoClose) * 100);\n        this.progressBarCover.nativeElement.style.width = percentage + \"%\";\n        if (percentage <= 0) return;\n      }\n      this._progressBarAnimation = requestAnimationFrame(frame);\n    };\n    this._progressBarAnimation = requestAnimationFrame(frame);\n  }\n\n  ngOnDestroy(): void {\n    // Cancel animation\n    if (this._progressBarAnimation) {\n      cancelAnimationFrame(this._progressBarAnimation);\n      this._progressBarAnimation = undefined;\n    }\n    // Clear auto close timeout\n    this.clearTimerTimeout();\n    // Complete all observables\n    this.toast.$resetToast?.complete();\n    this.toast.$resetToast = null;\n    this._$updateTimer?.complete();\n    this._$updateTimer = null;\n  }\n\n  startCloseTimer(): void {\n    if (this.running || !this.autoClose) {\n      return;\n    }\n\n    this.running = true;\n    this.expectedAutoDismissTime =\n      new Date().getTime() + this.autoCloseRemaining;\n    this.autoDismissTimeout = this._zone.runOutsideAngular(() =>\n      setTimeout(() => {\n        this._zone.run(() => {\n          this.dismissEvent.emit();\n          this._cd.markForCheck();\n        });\n      }, this.autoCloseRemaining)\n    );\n  }\n\n  pauseCloseTimer(): void {\n    this.running = false;\n    this.clearTimerTimeout();\n\n    // Calculate the elapsed time, subtract remaining time\n    this.pauseTime = new Date().getTime();\n    const elapsed = this.pauseTime - this.startTime;\n    this.autoCloseRemaining = this.autoClose - elapsed;\n  }\n\n  resetToastTimer() {\n    this.clearTimerTimeout();\n    this.running = false;\n    this.startTime = new Date().getTime();\n    this.autoCloseRemaining = this.autoClose;\n    this.startCloseTimer();\n  }\n\n  clearTimerTimeout(): void {\n    if (this.autoDismissTimeout !== undefined) {\n      this.expectedAutoDismissTime = undefined;\n      clearTimeout(this.autoDismissTimeout);\n    }\n  }\n\n  handleDismissButtonAction(): void {\n    if (this.closeOnClick) {\n      return; // Let the other event handle the dismissal\n    }\n\n    this.clearTimerTimeout();\n    this.dismissEvent.emit();\n  }\n\n  @HostListener(\"click\")\n  handleHostClick(): void {\n    if (this.closeOnClick) {\n      this.clearTimerTimeout();\n      this.dismissEvent.emit();\n    }\n  }\n\n  @HostListener(\"mouseenter\")\n  handleMouseEnter(): void {\n    if (this.pauseOnHover) {\n      this.pauseCloseTimer();\n    }\n  }\n\n  @HostListener(\"mouseleave\")\n  handleMouseLeave(): void {\n    if (this.pauseOnHover) {\n      this.startCloseTimer();\n      this.startTime = new Date().getTime() + (this.startTime - this.pauseTime);\n    }\n  }\n\n  @HostListener(\"document:visibilitychange\")\n  handleVisibilityChange(): void {\n    if (!this.pauseOnVisibilityChange) {\n      return;\n    }\n\n    if (document.visibilityState !== \"visible\") {\n      this.pauseCloseTimer();\n      this._cd.detectChanges();\n    } else {\n      this.startCloseTimer();\n    }\n  }\n}\n","<div role=\"alert\" class=\"toast-body\">\n    <div class=\"icon-container\">\n        <span *ngIf=\"iconLibrary == 'material'\" [ngSwitch]=\"toast.type\">\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.info\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.default\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.warning\">warning_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.error\">error_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.success\">done</i>\n        </span>\n        <span *ngIf=\"iconLibrary == 'font-awesome'\" [ngSwitch]=\"toast.type\">\n            <i *ngSwitchCase=\"ToastType.info\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.default\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.warning\" class=\"fa fa-exclamation-triangle\"></i>\n            <i *ngSwitchCase=\"ToastType.error\" class=\"fa fa-exclamation\"></i>\n            <i *ngSwitchCase=\"ToastType.success\" class=\"fa fa-check\"></i>\n        </span>\n    </div>\n    <div class=\"toast-container\">\n        <span>{{toast.message}}</span>\n    </div>\n</div>\n<button (click)=\"handleDismissButtonAction()\" class=\"close-button close-button--{{ToastType[toast.type]}}\" type=\"button\" aria-label=\"close\">âœ–</button>\n\n<div #progressBar *ngIf=\"!hideProgressBar\" class=\"progress-bar progress-bar&#45;&#45;{{ToastType[toast.type]}}\" style=\"opacity: 1;\"></div>\n<div #progressBarCover *ngIf=\"!hideProgressBar\" class=\"progress-bar-cover toast--{{ToastType[toast.type]}}\" [style.animation-duration]=\"this.autoClose + 'ms'\"  [style.animation-play-state]=\"running? 'running' : 'paused'\"></div>\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ToastService } from '../toast.service';\nimport { Toast } from '../toast';\nimport { ToastType } from '../toast-type';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'lib-toastify-toast-container',\n  templateUrl: './toastify-toast-container.component.html',\n  styleUrls: ['./toastify-toast-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToastifyToastContainerComponent implements OnInit, OnChanges {\n  private readonly transitionDurations = 400;\n\n  @Input() position: 'top-left' | 'top-right' | 'bottom-right' | 'bottom-left' = 'top-right';\n  @Input() transition: 'bounce' | 'slide' | 'zoom' | 'flip' = 'bounce';\n  @Input() autoClose = 5000;\n  @Input() hideProgressBar = false;\n  @Input() pauseOnHover = true;\n  @Input() pauseOnVisibilityChange = true;\n  @Input() closeOnClick = true;\n  @Input() newestOnTop = false;\n  @Input() preventDuplicates = false;\n  @Input() iconLibrary: 'material' | 'font-awesome' | 'none' = 'none';\n\n  ToastType = ToastType;\n  toasts = new Array<Toast>();\n  toastTransitionDict = {};\n\n  constructor(private _toastService: ToastService, private _cd: ChangeDetectorRef) { }\n\n  ngOnChanges(): void {\n    this._cd.markForCheck();\n  }\n\n  dismiss(toast: Toast): void {\n    this.toastTransitionDict[toast.id] = TransitionState.exiting;\n    setTimeout(() => {\n      const index = this.toasts.indexOf(toast);\n      this.toasts.splice(index, 1);\n      this._cd.markForCheck();\n    }, this.transitionDurations);\n  }\n\n  getClass(toast: Toast): string {\n    let base = `toast toast--${ToastType[toast.type]} `;\n    const state = this.toastTransitionDict[toast.id];\n    if (state === TransitionState.entering) {\n      base += `${this.transition}-enter ${this.transition}-enter--${this.position}`;\n    } else if (state === TransitionState.exiting) {\n      base += `${this.transition}-exit ${this.transition}-exit--${this.position}`;\n    }\n\n    return base;\n  }\n\n  ngOnInit(): void {\n    this._toastService.dismissAllEvent.subscribe(() => {\n      this.toasts = new Array<Toast>();\n      this._cd.markForCheck();\n    });\n\n    this._toastService.toastAddedEvent.subscribe((toast: Toast) => this.handleToastAddedEvent(toast));\n  }\n\n  handleToastAddedEvent(toast: Toast): void {\n    // If \"preventDuplicates\" is enabled, toast is not added if one toast with same message exists\n    // The only thing to do is to update the toast time to keep it visible\n    if(this.preventDuplicates === true) {\n      const sameToast: Toast = this.toasts.find((existingToast) => existingToast.message === toast.message);\n      if (sameToast) {\n        sameToast.$resetToast.next();\n        this._cd.markForCheck();\n        return;\n      }\n    }\n\n    // Add new toast transition\n    this.toastTransitionDict[toast.id] = TransitionState.entering;\n    setTimeout(() => {\n      this.toastTransitionDict[toast.id] = TransitionState.noTransition;\n      this._cd.markForCheck();\n    }, this.transitionDurations);\n\n    // Add new toast\n    if (this.newestOnTop) {\n      this.toasts.unshift(toast);\n    } else {\n      this.toasts.push(toast);\n    }\n    this._cd.markForCheck();\n  }\n}\n\nenum TransitionState {\n  entering,\n  noTransition,\n  exiting\n}\n","<div class=\"toast-container toast-container--{{position}}\">\n    <lib-toastify-toast *ngFor=\"let toast of toasts\" [class]=\"getClass(toast)\" style=\"animation-fill-mode: both; animation-duration: 0.75s\"\n        [autoClose]=\"autoClose\" [toast]=\"toast\" (dismissEvent)=\"dismiss(toast)\" [hideProgressBar]=\"hideProgressBar\" [pauseOnHover]=\"pauseOnHover\"\n        [pauseOnVisibilityChange]=\"pauseOnVisibilityChange\" [closeOnClick]=\"closeOnClick\" [iconLibrary]=\"iconLibrary\">\n    </lib-toastify-toast>\n</div>","import { NgModule } from '@angular/core';\nimport { ToastifyToastComponent } from './toastify-toast/toastify-toast.component';\nimport { ToastifyToastContainerComponent } from './toastify-toast-container/toastify-toast-container.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ToastifyToastComponent, ToastifyToastContainerComponent],\n  imports: [ CommonModule ],\n  exports: [ToastifyToastContainerComponent]\n})\nexport class AngularToastifyModule { }\n","/*\n * Public API Surface of angular-toastify\n */\n\nexport * from './lib/toast.service';\nexport * from './lib/toastify-toast-container/toastify-toast-container.component';\nexport * from './lib/angular-toastify.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}