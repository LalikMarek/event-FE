import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from "@angular/core";
import { ToastType } from "../toast-type";
import { Toast } from "../toast";
import * as i0 from "@angular/core";
export declare class ToastifyToastComponent implements OnInit, OnDestroy {
    private _cd;
    private _zone;
    progressBar: ElementRef<HTMLElement>;
    progressBarCover: ElementRef<HTMLElement>;
    autoClose: number;
    hideProgressBar: boolean;
    pauseOnHover: boolean;
    pauseOnVisibilityChange: boolean;
    closeOnClick: boolean;
    toast: Toast;
    iconLibrary: "material" | "font-awesome" | "none";
    dismissEvent: EventEmitter<any>;
    private expectedAutoDismissTime;
    private autoDismissTimeout;
    private autoCloseRemaining;
    private pauseTime;
    private startTime;
    private _progressBarAnimation;
    private _$updateTimer;
    ToastType: typeof ToastType;
    running: boolean;
    constructor(_cd: ChangeDetectorRef, _zone: NgZone);
    ngOnInit(): void;
    private triggerProgressBarAnimation;
    ngOnDestroy(): void;
    startCloseTimer(): void;
    pauseCloseTimer(): void;
    resetToastTimer(): void;
    clearTimerTimeout(): void;
    handleDismissButtonAction(): void;
    handleHostClick(): void;
    handleMouseEnter(): void;
    handleMouseLeave(): void;
    handleVisibilityChange(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ToastifyToastComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ToastifyToastComponent, "lib-toastify-toast", never, { "autoClose": "autoClose"; "hideProgressBar": "hideProgressBar"; "pauseOnHover": "pauseOnHover"; "pauseOnVisibilityChange": "pauseOnVisibilityChange"; "closeOnClick": "closeOnClick"; "toast": "toast"; "iconLibrary": "iconLibrary"; }, { "dismissEvent": "dismissEvent"; }, never, never>;
}
